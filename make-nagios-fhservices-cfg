#!/usr/bin/env python

import os

from jinja2 import Environment, FileSystemLoader, Template

fh_services = [
    {'name': 'fh-messaging', 'checks': ['ping', 'health'], 'hostgroups': ['core']},
    {'name': 'fh-messaging','service': 'fh-messaging-service', 'checks': ['ping', 'health'], 'hostgroups': ['mbaas']},
    {'name': 'fh-metrics', 'checks': ['ping', 'health'], 'hostgroups': ['core']},
    {'name': 'fh-metrics', 'service': 'fh-metrics-service', 'checks': ['ping', 'health'], 'hostgroups': ['mbaas']},
    {'name': 'fh-ngui', 'checks': ['ping', 'health'], 'hostgroups': ['core']},
    {'name': 'fh-supercore', 'checks': ['ping', 'health'], 'hostgroups': ['core']},
    {'name': 'fh-aaa', 'checks': ['ping', 'health'], 'hostgroups': ['core']},
    {'name': 'fh-appstore', 'checks': ['ping', 'health'], 'hostgroups': ['core']},
    {'name': 'fh-scm', 'checks': ['ping', 'health'], 'hostgroups': ['core']},
    {'name': 'fh-mbaas', 'service': 'fh-mbaas-service', 'checks': ['ping', 'health'], 'hostgroups': ['mbaas']},
    {'name': 'fh-statsd', 'service': 'fh-statsd-service', 'checks': ['ping'], 'hostgroups': ['mbaas']},
    {'name': 'millicore', 'checks': ['ping', 'health'], 'health_endpoint': '/box/api/health',  'ping_endpoint': '/box/srv/1.1/tst/version', 'hostgroups': ['core']},
    {'name': 'ups', 'checks': ['ping', 'health'], 'health_endpoint': '/ag-push/rest/sys/info/health', 'ping_endpoint': '/ag-push/rest/sys/info/ping', 'hostgroups': ['core']}
]

rhmap_admin_email = os.getenv('RHMAP_ADMIN_EMAIL', 'root@localhost')
rhmap_router_dns = os.getenv('RHMAP_ROUTER_DNS', 'localhost')
rhmap_hostgroups = os.getenv('RHMAP_HOSTGROUPS', 'core')

try:
    mongodb_count = int(os.getenv('MONGODB_ENDPOINT_COUNT', 3))
#if env var is an empty string or is not able to be converted into a number
except ValueError:
    mongodb_count = 3

mongodb_services = ['mongodb-%s' % i for i in xrange(1, mongodb_count + 1)]

userdata_project_name = os.getenv('USERDATA_PROJECT_NAME', 'rhmap-user-data')
try:
    userdata_mongodb_count = int(os.getenv('USERDATA_MONGODB_ENDPOINT_COUNT', 3))
except ValueError:
    userdata_mongodb_count = 3

userdata_mongodb_services = ['mongodb-%s' % i for i in xrange(1, userdata_mongodb_count + 1)]

try:
    mysql_count = int(os.getenv('MYSQL_ENDPOINT_COUNT', 3))
#if env var is an empty string or is not able to be converted into a number
except ValueError:
    mysql_count = 3

if mysql_count == 3:
    mysql_services = ['mysql', 'mysql-2', 'mysql-3']
else:
    mysql_services = ['mysql']

jenkins_host = os.getenv('JENKINS_SERVICE_HOST')
jenkins_port = os.getenv('JENKINS_SERVICE_PORT')
jenkins_user = os.getenv('JENKINS_USER')
jenkins_pass = os.getenv('JENKINS_PASS')


check_android = False
check_mac = False

if rhmap_hostgroups == 'digger':
    platforms = os.getenv('PLATFORMS')
    if 'android' in platforms:
        check_android = True
    if 'ios' in platforms:
        check_mac = True



template_file = '/opt/rhmap/fhservices.cfg.j2'
nagios_config_filename = '/etc/nagios/conf.d/fhservices.cfg'

template_basename = os.path.basename(template_file)
template_dirname = os.path.dirname(template_file)

j2env = Environment(loader=FileSystemLoader(template_dirname), trim_blocks=True)
j2template = j2env.get_template(template_basename)

j2renderedouput = j2template.render(fh_services=fh_services,
                                    mongodb_services=mongodb_services,
                                    mongodb_instances=mongodb_count,
                                    mysql_services=mysql_services,
                                    mysql_instances=mysql_count,
                                    rhmap_hostgroups=rhmap_hostgroups,
                                    rhmap_router_dns=rhmap_router_dns,
                                    rhmap_admin_email=rhmap_admin_email,
                                    jenkins_host=jenkins_host,
                                    jenkins_port=jenkins_port,
                                    jenkins_user=jenkins_user,
                                    jenkins_pass=jenkins_pass,
                                    check_android=check_android,
                                    check_mac=check_mac,
                                    userdata_project_name=userdata_project_name,
                                    userdata_mongodb_services=userdata_mongodb_services,
                                    userdata_mongodb_instances=userdata_mongodb_count)

with open(nagios_config_filename, 'wb') as nagios_config_file:
    nagios_config_file.write(j2renderedouput)
